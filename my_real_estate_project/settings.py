"""
Django settings for my_real_estate_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fu0&1)p71ay*e3l5k$$cub3!(@#2rjk(dou)h&zxlgl11dpe&x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

# my_real_estate_project/settings.py

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', # For allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google', # If you're using Google login
    'widget_tweaks',
    # Crispy Forms and its Tailwind template pack
    'crispy_forms',      # MUST be before crispy_tailwind
    'crispy_tailwind',   # MUST be after crispy_forms

    # Your custom apps
    'users',
    'properties',
    'inquiries',
    # ... any other apps
]

# settings.py


SITE_ID = 1

# my_real_estate_project/settings.py

AUTHENTICATION_BACKENDS = [
    # Required for allauth to work properly
    'allauth.account.auth_backends.AuthenticationBackend',
    # Django's default ModelBackend for admin and custom user models
    'django.contrib.auth.backends.ModelBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # ← أضف ده هنا

    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_real_estate_project.urls'

# my_real_estate_project/settings.py

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # هنا نضيف المجلد العام للقوالب
        'APP_DIRS': True, # هذا هو الأهم: لكي يبحث Django عن القوالب داخل مجلد templates/ لكل تطبيق
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_real_estate_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


# my_real_estate_project/settings.py

# إعدادات الملفات الثابتة (CSS, JS, images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static', # لجمع الملفات الثابتة العامة في مجلد static/ بالمشروع
]
# STATIC_ROOT = BASE_DIR / 'staticfiles' # يستخدم في الإنتاج (بعد collectstatic)
import os
# إعدادات ملفات الوسائط (صور المستخدمين، صور العقارات)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import os
from dotenv import load_dotenv

load_dotenv()

GOOGLE_MAPS_API_KEY = os.getenv("GOOGLE_MAPS_API_KEY")



# my_real_estate_project/settings.py

# ... (other existing settings, like BASE_DIR, etc.)
import os # Make sure this is at the top if not already there

# my_real_estate_project/settings.py

# ... (other existing settings, like BASE_DIR, etc.)

# my_real_estate_project/settings.py

# my_real_estate_project/settings.py

# ... (other existing settings)

# my_real_estate_project/settings.py

# ... (باقي إعداداتك)

AUTH_USER_MODEL = 'users.CustomUser'

# --- Core Django Authentication Settings ---
LOGIN_URL = 'users:login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# --- django-allauth Specific Settings (النهائية) ---
SITE_ID = 1

# طرق تسجيل الدخول: السماح بتسجيل الدخول باسم المستخدم أو البريد الإلكتروني
ACCOUNT_LOGIN_METHODS = ['username', 'email'] 

# الحقول المطلوبة عند التسجيل: 
# هنا نحدد الحقول التي يجب على المستخدم إدخالها.
# بما أن ACCOUNT_LOGIN_METHODS تتضمن 'email'، فغالباً allauth سيتوقع وجوده.
# لذا، سنقوم بتبسيط ACCOUNT_SIGNUP_FIELDS لـ 'username' فقط،
# مع العلم أن 'email' سيظل مطلوباً إذا تم تضمينه في ACCOUNT_LOGIN_METHODS أو إذا كان التحقق إلزامياً.
ACCOUNT_SIGNUP_FIELDS = ['username'] # <--- هذا هو التغيير الرئيسي هنا

# تفعيل التحقق من البريد الإلكتروني: 'mandatory', 'optional', 'none'
ACCOUNT_EMAIL_VERIFICATION = "none" # لا يوجد تحقق من البريد الإلكتروني

# تأكد أن هذا السطر غير موجود أو معلق، حيث تم إهماله و 'email' مطلوب بواسطة ACCOUNT_LOGIN_METHODS
# ACCOUNT_EMAIL_REQUIRED = True 

ACCOUNT_UNIQUE_EMAIL = True # تأكد أن البريد الإلكتروني فريد

ACCOUNT_ADAPTER = 'allauth.account.adapter.DefaultAccountAdapter' 
ACCOUNT_PRESERVE_USERNAME_FAILS = True

# إعدادات الحسابات الاجتماعية
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_LOGIN_ON_GET = True

# مسارات إعادة التوجيه الخاصة بـ allauth
ACCOUNT_SIGNUP_REDIRECT_URL = '/'
ACCOUNT_LOGIN_REDIRECT_URL = '/'

# ... (باقي إعداداتك، وتأكد أنك أزلت كل الإعدادات القديمة والمكررة الأخرى)
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_data'), # Absolute path for cache
    }
}

# ... (rest of your settings)


# my_real_estate_project/settings.py

# ... (below INSTALLED_APPS, or at the end of the file)

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

# ... (باقي الإعدادات) ...

# إعدادات البريد الإلكتروني (للتطوير: طباعة الإيميلات في الكونسول)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# لو هتستخدم بريد إلكتروني حقيقي في الإنتاج:
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com' # مثال لـ Gmail
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your_email@example.com'
# EMAIL_HOST_PASSWORD = 'your_email_password'
# DEFAULT_FROM_EMAIL = 'no-reply@yourwebsite.com'